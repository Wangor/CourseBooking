@model CourseBooking.Controllers.RegisterA1ViewModel
@{
    ViewBag.Title = "Anmeldung A1";
    Layout = "~/Views/Shared/_Blank.cshtml";
}
@using (Html.BeginForm(new { @class = "form-horizontal"}))
{
    <div class="editor">
        <h3>Anmeldung Motorradgrundkurs A1</h3>

        <div class="form-group">
            @Html.LabelFor(model => model.Registration.Name, new { @class = "control-label col-xs-2" })
            <div class="col-xs-10">
                @Html.EditorFor(model => model.Registration.Name, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Registration.Name)
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Registration.PreName, new { @class = "control-label col-xs-2" })
            <div class="col-xs-10">
                @Html.EditorFor(model => model.Registration.PreName, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Registration.PreName)
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Registration.AddressLine, new { @class = "control-label col-xs-2" })
            <div class="col-xs-10">
                @Html.EditorFor(model => model.Registration.AddressLine, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Registration.AddressLine)
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Registration.AddressLine2, new { @class = "control-label col-xs-2" })
            <div class="col-xs-10">
                @Html.EditorFor(model => model.Registration.AddressLine2, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Registration.AddressLine2)
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Registration.Zip, new { @class = "control-label col-xs-2" })
            <div class="col-xs-10">
                @Html.EditorFor(model => model.Registration.Zip, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Registration.Zip)
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Registration.City, new { @class = "control-label col-xs-2" })
            <div class="col-xs-10">
                @Html.EditorFor(model => model.Registration.City, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Registration.City)
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Registration.Birthdate, new { @class = "control-label col-xs-2" })
            <div class="col-xs-10">
                @Html.Kendo().DatePickerFor(model => model.Registration.Birthdate)
                @Html.ValidationMessageFor(model => model.Registration.Birthdate)
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Registration.EMail, new { @class = "control-label col-xs-2" })
            <div class="col-xs-10">
                @Html.EditorFor(model => model.Registration.EMail, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Registration.EMail)
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Registration.Phone, new { @class = "control-label col-xs-2" })
            <div class="col-xs-10">
                @Html.EditorFor(model => model.Registration.Phone, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Registration.Phone)
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Registration.LfaEndDateTime, new { @class = "control-label col-xs-2" })
            <div class="col-xs-10">
                @Html.Kendo().DatePickerFor(model => model.Registration.LfaEndDateTime)
                @Html.ValidationMessageFor(model => model.Registration.LfaEndDateTime)
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Registration.RegRefNr, new { @class = "control-label col-xs-2" })
            <div class="col-xs-10">
                @Html.EditorFor(model => model.Registration.RegRefNr, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Registration.RegRefNr)
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Course1, new { @class = "control-label col-xs-2" })
            <div class="col-xs-10">
                @(Html.Kendo().DropDownListFor(m => m.Course1).Name("Course1").DataTextField("DisplayName").DataValueField("Id").HtmlAttributes(new { style = "width: 500px" }).DataSource(source =>
                      {
                          source.Read(read =>
                              { read.Action("GetCourseDL", "Courses", new { templateId = 2 }); });
                      }).Events(e => { e.DataBound("selectCourse"); e.Change("selectCourse"); }))
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Course2, new { @class = "control-label col-xs-2" })
            <div class="col-xs-10">
                @(Html.Kendo().DropDownList().Name("Course2").DataTextField("DisplayName").DataValueField("Id").HtmlAttributes(new { style = "width: 500px" }).DataSource(source =>
                      {
                          source.Read(read =>
                              { read.Action("GetCourseDL", "Courses", new { templateId = 3 }).Data("filter"); }).ServerFiltering(true);
                      }).Enable(false).AutoBind(false).CascadeFrom("Course1").Events(e => { e.DataBound("selectCourse"); e.Change("selectCourse");})
                      )
                <script>
                    function filter() {
                        return {
                            previous: $("#Course1").val()
                        };
                    }
                </script>

            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Registration.Remark, new { @class = "control-label col-xs-2" })
            <div class="col-xs-10">
                @Html.TextAreaFor(model => model.Registration.Remark, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Registration.Remark)
            </div>
        </div>
        <div class="form-group">
            Kursteil 1: <p id="course1"></p>
            Kursteil 2: <p id="course2"></p>
            Administrationsgebühren: <p id="tax"></p>
            Gesamtkosten: <p id="total"></p>
        </div>
        <div>
            <input type="submit" value="Anmelden" class="btn btn-primary"/>
        </div>
    </div>
}

<script language="javascript">
    function selectCourse(e) {
        var c1 = $("#Course1").val();
        var c2 = $("#Course2").val();

        if (c1 === "0" || c2 === "0") {
            return;
        }

        $.ajax({
            url: '@Url.Action("CalculateA1", "PriceCalculation")',
            type: 'POST',
            dataType: 'json',
            cache: false,
            data: {
                course1: c1,
                course2: c2
            },
            success: function (result) {
                $("#tax").text(result.fee);
                $("#course1").text(result.course1);
                $("#course2").text(result.course2);
                $("#total").text(result.total);
            },
            error: function () {
                alert("error");
            }
        });
    }
</script>
